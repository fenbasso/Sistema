unit uEstados;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uPadrao, Data.DB, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ExtCtrls, Vcl.DBCtrls,
  Vcl.StdCtrls, Vcl.Mask, Vcl.Grids, Vcl.DBGrids, Vcl.ComCtrls;

type
  TfrmEstados = class(TfrmPadrao)
    lblCidade: TLabel;
    edtCidade: TDBEdit;
    cmbEstado: TDBLookupComboBox;
    lblEstado: TLabel;
    dtsEstados: TDataSource;
    qryEstados: TFDQuery;
    procedure FormShow(Sender: TObject);
    procedure qryBeforePost(DataSet: TDataSet);
    procedure qryBeforeInsert(DataSet: TDataSet);
    procedure qryBeforeEdit(DataSet: TDataSet);
    procedure qryAfterCancel(DataSet: TDataSet);
    procedure qryAfterPost(DataSet: TDataSet);
  private
    { Private declarations }
  public
    function fValida: Boolean;
  end;

var
  frmEstados: TfrmEstados;

implementation

{$R *.dfm}

uses udmConexao;

{ TfrmPadrao1 }

procedure TfrmEstados.FormShow(Sender: TObject);
begin
  inherited;

  qryEstados.Close;
  qryEstados.SQL.Text := 'SELECT * FROM ESTADOS ORDER BY ESTADO';
  qryEstados.Open;

  qry.Close;
  qry.SQL.Text := 'SELECT a.*, b.estado '+
                  'FROM dba.cidades a '+
                  'JOIN dba.Estados b on b.CodigoEstado = a.CodigoEstado '+
                  'Order by a.Cidade ';
  qry.Open;
end;

function TfrmEstados.fValida: Boolean;
begin
  Result := True;

  if Trim(qry.FieldByName('CIDADE').AsString) = '' then
  begin
    Result := False;

    MessageBox(Handle, 'Informe a Cidade', 'Atenção', MB_ICONEXCLAMATION or MB_OK);

    edtCidade.SetFocus;
  end
  else if qry.FieldByName('CODIGOESTADO').IsNull then begin
    Result := False;

    MessageBox(Handle, 'Informe o Estado', 'Atenção', MB_ICONEXCLAMATION or MB_OK);

    cmbEstado.SetFocus;
  end;
end;

procedure TfrmEstados.qryAfterCancel(DataSet: TDataSet);
begin
  inherited;
  pgcDados.ActivePageIndex := 0;
end;

procedure TfrmEstados.qryAfterPost(DataSet: TDataSet);
begin
  inherited;
  pgcDados.ActivePageIndex := 0;
end;

procedure TfrmEstados.qryBeforeEdit(DataSet: TDataSet);
begin
  inherited;

  pgcDados.ActivePageIndex := 1;
  edtCidade.SetFocus;
end;

procedure TfrmEstados.qryBeforeInsert(DataSet: TDataSet);
begin
  inherited;

  pgcDados.ActivePageIndex := 1;
  edtCidade.SetFocus;
end;

procedure TfrmEstados.qryBeforePost(DataSet: TDataSet);
begin
  inherited;

  if not fValida then
  begin
    Abort;
  end;
end;

end.
